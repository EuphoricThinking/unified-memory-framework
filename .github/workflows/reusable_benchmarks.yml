 # Executes benchmarks implemented in this repository
name: Benchmarks

on: 
  workflow_call:
    inputs:
      # str_name:
      #   required: true
      #   type: string
      # unit:
      #   required: true
      #   type: string
      pr_no:
        required: true
        # even though this is a number, this is a workaround for issues with
        # reusable workflow calls that result in "Unexpected value '0'" error.
        type: string
        default: '0'
      bench_script_params:
        required: false
        type: string
        default: ''
      # sycl_config_params:
      #   required: false
      #   type: string
      #   default: ''
      # sycl_repo:
      #   required: true
      #   type: string
      #   default: 'intel/llvm'
      # sycl_commit:
      #   required: false
      #   type: string
      #   default: ''
      upload_report:
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  pull-requests: write

env:
  BUILD_DIR : "${{github.workspace}}/build"
  INSTL_DIR : "${{github.workspace}}/../install-dir"

jobs:
  benchmarks:
    name: Benchmarks
    env:
      VCPKG_PATH: "${{github.workspace}}/build/vcpkg/packages/hwloc_x64-windows;${{github.workspace}}/build/vcpkg/packages/tbb_x64-windows;${{github.workspace}}/build/vcpkg/packages/jemalloc_x64-windows"
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        include: 
          # Windows doesn't recognize 'CMAKE_BUILD_TYPE', it uses '--config' param in build command to determine the build type
          - os: ubuntu-latest
            extra_build_option: '-DCMAKE_BUILD_TYPE=Release'
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Install apt packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libhwloc-dev libnuma-dev libtbb-dev

      - name: Initialize vcpkg
        if: matrix.os == 'windows-latest'
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
        with:
          vcpkgGitCommitId: 3dd44b931481d7a8e9ba412621fa810232b66289
          vcpkgDirectory: ${{env.BUILD_DIR}}/vcpkg
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Install vcpkg packages
        if: matrix.os == 'windows-latest'
        run: vcpkg install
        shell: pwsh # Specifies PowerShell as the shell for running the script.

      - name: Configure build
        run: >
          cmake
          -B ${{env.BUILD_DIR}}
          ${{matrix.extra_build_option}}
          -DCMAKE_INSTALL_PREFIX="${{env.INSTL_DIR}}"
          -DCMAKE_PREFIX_PATH="${{env.VCPKG_PATH}}"
          -DUMF_BUILD_SHARED_LIBRARY=ON
          -DUMF_BUILD_BENCHMARKS=ON
          -DUMF_BUILD_BENCHMARKS_MT=ON
          -DUMF_BUILD_TESTS=OFF
          -DUMF_FORMAT_CODE_STYLE=OFF
          -DUMF_DEVELOPER_MODE=OFF
          -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
          -DUMF_BUILD_CUDA_PROVIDER=ON
          -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
          -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON

      - name: Build UMF on Linux
        if: matrix.os == 'ubuntu-latest'
        run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

      - name: Build UMF on Windows
        if: matrix.os == 'windows-latest'
        run: cmake --build ${{env.BUILD_DIR}} --config Release -j $Env:NUMBER_OF_PROCESSORS

      - name: Checkout UR
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: EuphoricThinking/unified-runtime
          ref: a9193c35d1aa6c54985a2f35453cd19a22441d58
          path: ur-repo
          fetch-depth: 1
          fetch-tags: false

      - name: Install pip packages
        run: |
          pip install --force-reinstall -r ${{github.workspace}}/ur-repo/third_party/benchmark_requirements.txt

      - name: Install HWLOC
        run: |
          sudo apt-get update
          sudo apt-get install libhwloc-dev

      - name: Run benchmarks
        working-directory: ${{env.BUILD_DIR}}
        run: >
          ${{ github.workspace }}/ur-repo/scripts/benchmarks/main.py
          ~/bench_workdir
          # --sycl ${{ github.workspace }}/sycl_build
          # --ur ${{ github.workspace }}/ur_install
          --umf  ${{env.BUILD_DIR}}
          # --adapter ${{ matrix.adapter.str_name }}
          ${{ inputs.upload_report && '--output-html' || '' }}
          ${{ inputs.bench_script_params }}
